{"ast":null,"code":"var _jsxFileName = \"/Users/diogenes/Documents/GitHub/ml-radar/ui-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport * as THREE from \"three\";\n\nclass App extends Component {\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.mount.appendChild(renderer.domElement);\n    var geometry = new THREE.BoxGeometry(1, 1, 1);\n    var material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    var cube = new THREE.Mesh(geometry, material); //scene.add(cube);\n\n    camera.position.z = 50;\n    var geometry1 = new THREE.Geometry();\n    geometry1.vertices.push(new THREE.Vector3(-20, 0, 0));\n    geometry1.vertices.push(new THREE.Vector3(0, 20, 0));\n    geometry1.vertices.push(new THREE.Vector3(20, 0, 0));\n    geometry1.vertices.push(new THREE.Vector3(0, -20, 0));\n    geometry1.vertices.push(new THREE.Vector3(-20, 0, 0));\n    var material1 = new THREE.LineBasicMaterial({\n      color: 0x42ff00\n    });\n    var line = new THREE.Line(geometry1, material1); //scene.add(line);\n\n    var geometry2 = new THREE.CircleGeometry(20, 50);\n    var material2 = new THREE.MeshBasicMaterial({\n      color: 0x42ff00\n    }); //var circle = new THREE.Mesh( geometry2, material2 );\n\n    const innerRadius = 21.99;\n    const outerRadius = 22;\n    const segments = 100;\n    const geometry3 = new THREE.RingBufferGeometry(innerRadius, outerRadius, segments);\n    const material3 = new THREE.MeshBasicMaterial({\n      color: 0x42ff00\n    });\n    const circle = new THREE.Mesh(geometry3, material3);\n    scene.add(circle);\n\n    var animate = function () {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: ref => this.mount = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/diogenes/Documents/GitHub/ml-radar/ui-app/src/App.js"],"names":["React","Component","THREE","App","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","mount","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","position","z","geometry1","Geometry","vertices","push","Vector3","material1","LineBasicMaterial","line","Line","geometry2","CircleGeometry","material2","innerRadius","outerRadius","segments","geometry3","RingBufferGeometry","material3","circle","add","animate","requestAnimationFrame","rotation","x","y","render","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\nimport * as THREE from \"three\";\n\nclass App extends Component {\n  \n  componentDidMount() {\n    \n    var scene = new THREE.Scene();\n\n    var camera = new THREE.PerspectiveCamera(\n      50,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n\n    var renderer = new THREE.WebGLRenderer();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n    \n    this.mount.appendChild(renderer.domElement);\n\n    var geometry = new THREE.BoxGeometry(1, 1, 1);\n    var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n    var cube = new THREE.Mesh(geometry, material);\n    //scene.add(cube);\n\n    camera.position.z = 50;\n\n    var geometry1 = new THREE.Geometry();\n        geometry1.vertices.push(new THREE.Vector3( -20, 0, 0) );\n        geometry1.vertices.push(new THREE.Vector3( 0, 20, 0) );\n        geometry1.vertices.push(new THREE.Vector3( 20, 0, 0) );\n        geometry1.vertices.push(new THREE.Vector3( 0, -20, 0) );\n        geometry1.vertices.push(new THREE.Vector3( -20, 0, 0) );\n\n    var material1 = new THREE.LineBasicMaterial( { color: 0x42ff00 } );\n\n    var line = new THREE.Line( geometry1, material1 );\n    \n    //scene.add(line);\n\n    var geometry2 = new THREE.CircleGeometry( 20, 50 );\n    var material2 = new THREE.MeshBasicMaterial( { color: 0x42ff00 } );\n    //var circle = new THREE.Mesh( geometry2, material2 );\n    \nconst innerRadius = 21.99;\nconst outerRadius = 22;\nconst segments = 100;\nconst geometry3 = new THREE.RingBufferGeometry(innerRadius, outerRadius, segments);\nconst material3 = new THREE.MeshBasicMaterial( { color: 0x42ff00 } );\nconst circle = new THREE.Mesh( geometry3, material3 );\nscene.add(circle);\n\n\n    var animate = function() {\n      requestAnimationFrame(animate);\n\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n\n  render() {\n    return <div ref={ref => (this.mount = ref)} />;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}