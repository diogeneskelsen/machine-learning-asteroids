{"ast":null,"code":"var _jsxFileName = \"/Users/diogenes/Documents/GitHub/ml-radar/ui-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport * as THREE from \"three\";\n\nclass App extends Component {\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.mount.appendChild(renderer.domElement);\n    camera.position.z = 50; //var innerRadius = 21.9;\n    //var outerRadius = 22;\n    //var segments = 100;\n\n    var geometry3, material3, circle;\n    var i;\n\n    for (i = 0; i < 10; i++) {\n      console.log(i);\n    } //for (var i = 10; i <= 22; (i+2)) {\n    //console.log(i);\n\n    /*geometry3 = new THREE.RingBufferGeometry((i-0.1), i, 100);\n    material3 = new THREE.MeshBasicMaterial( { color: 0x42ff00 } );\n    circle = new THREE.Mesh( geometry3, material3 );\n    scene.add(circle);*/\n    //}\n\n\n    var animate = function () {\n      requestAnimationFrame(animate); //cube.rotation.x += 0.01;\n      //cube.rotation.y += 0.01;\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: ref => this.mount = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/diogenes/Documents/GitHub/ml-radar/ui-app/src/App.js"],"names":["React","Component","THREE","App","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","mount","appendChild","domElement","position","z","geometry3","material3","circle","i","console","log","animate","requestAnimationFrame","render","ref"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAE1BG,EAAAA,iBAAiB,GAAG;AAElB,QAAIC,KAAK,GAAG,IAAIH,KAAK,CAACI,KAAV,EAAZ;AAEA,QAAIC,MAAM,GAAG,IAAIL,KAAK,CAACM,iBAAV,CACX,EADW,EAEXC,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAFhB,EAGX,GAHW,EAIX,IAJW,CAAb;AAOA,QAAIC,QAAQ,GAAG,IAAIV,KAAK,CAACW,aAAV,EAAf;AACID,IAAAA,QAAQ,CAACE,OAAT,CAAiBL,MAAM,CAACC,UAAxB,EAAoCD,MAAM,CAACE,WAA3C;AAEJ,SAAKI,KAAL,CAAWC,WAAX,CAAuBJ,QAAQ,CAACK,UAAhC;AAEAV,IAAAA,MAAM,CAACW,QAAP,CAAgBC,CAAhB,GAAoB,EAApB,CAhBkB,CAkBlB;AACA;AACA;;AACA,QAAIC,SAAJ,EAAeC,SAAf,EAA0BC,MAA1B;AAEJ,QAAIC,CAAJ;;AACA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,KA1BqB,CA4BlB;AACE;;AACA;;;;AAIF;;;AAEA,QAAIG,OAAO,GAAG,YAAW;AACvBC,MAAAA,qBAAqB,CAACD,OAAD,CAArB,CADuB,CAGvB;AACA;;AAEAd,MAAAA,QAAQ,CAACgB,MAAT,CAAgBvB,KAAhB,EAAuBE,MAAvB;AACD,KAPD;;AASAmB,IAAAA,OAAO;AACR;;AAEDE,EAAAA,MAAM,GAAG;AACP,WAAO;AAAK,MAAA,GAAG,EAAEC,GAAG,IAAK,KAAKd,KAAL,GAAac,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AApDyB;;AAuD5B,eAAe1B,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\nimport * as THREE from \"three\";\n\nclass App extends Component {\n  \n  componentDidMount() {\n    \n    var scene = new THREE.Scene();\n\n    var camera = new THREE.PerspectiveCamera(\n      50,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n\n    var renderer = new THREE.WebGLRenderer();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n    \n    this.mount.appendChild(renderer.domElement);\n\n    camera.position.z = 50;\n\n    //var innerRadius = 21.9;\n    //var outerRadius = 22;\n    //var segments = 100;\n    var geometry3, material3, circle;\n\nvar i;\nfor (i = 0; i < 10; i++) {\n  console.log(i);\n}\n\n    //for (var i = 10; i <= 22; (i+2)) {\n      //console.log(i);\n      /*geometry3 = new THREE.RingBufferGeometry((i-0.1), i, 100);\n      material3 = new THREE.MeshBasicMaterial( { color: 0x42ff00 } );\n      circle = new THREE.Mesh( geometry3, material3 );\n      scene.add(circle);*/\n    //}\n\n    var animate = function() {\n      requestAnimationFrame(animate);\n\n      //cube.rotation.x += 0.01;\n      //cube.rotation.y += 0.01;\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n\n  render() {\n    return <div ref={ref => (this.mount = ref)} />;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}