{"ast":null,"code":"var _jsxFileName = \"/Users/diogenes/Documents/GitHub/ml-radar/ui-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport * as THREE from \"three\";\n\nclass App extends Component {\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.mount.appendChild(renderer.domElement);\n    camera.position.z = 50;\n    var innerRadius = 21.9;\n    var outerRadius = 22;\n    var segments = 100;\n    var geometry3, material3, circle;\n\n    for (var i = 10; i <= 22; i + 4) {\n      geometry3 = new THREE.RingBufferGeometry(i - 0.1, outerRadius, segments);\n      material3 = new THREE.MeshBasicMaterial({\n        color: 0x42ff00\n      });\n      circle = new THREE.Mesh(geometry3, material3);\n      scene.add(circle);\n    }\n\n    var animate = function () {//requestAnimationFrame(animate);\n      //cube.rotation.x += 0.01;\n      //cube.rotation.y += 0.01;\n      //renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: ref => this.mount = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/diogenes/Documents/GitHub/ml-radar/ui-app/src/App.js"],"names":["React","Component","THREE","App","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","mount","appendChild","domElement","position","z","innerRadius","outerRadius","segments","geometry3","material3","circle","i","RingBufferGeometry","MeshBasicMaterial","color","Mesh","add","animate","render","ref"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAE1BG,EAAAA,iBAAiB,GAAG;AAElB,QAAIC,KAAK,GAAG,IAAIH,KAAK,CAACI,KAAV,EAAZ;AAEA,QAAIC,MAAM,GAAG,IAAIL,KAAK,CAACM,iBAAV,CACX,EADW,EAEXC,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAFhB,EAGX,GAHW,EAIX,IAJW,CAAb;AAOA,QAAIC,QAAQ,GAAG,IAAIV,KAAK,CAACW,aAAV,EAAf;AACID,IAAAA,QAAQ,CAACE,OAAT,CAAiBL,MAAM,CAACC,UAAxB,EAAoCD,MAAM,CAACE,WAA3C;AAEJ,SAAKI,KAAL,CAAWC,WAAX,CAAuBJ,QAAQ,CAACK,UAAhC;AAEAV,IAAAA,MAAM,CAACW,QAAP,CAAgBC,CAAhB,GAAoB,EAApB;AAEA,QAAIC,WAAW,GAAG,IAAlB;AACA,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,QAAQ,GAAG,GAAf;AACA,QAAIC,SAAJ,EAAeC,SAAf,EAA0BC,MAA1B;;AAGA,SAAK,IAAIC,CAAC,GAAG,EAAb,EAAiBA,CAAC,IAAI,EAAtB,EAA2BA,CAAC,GAAC,CAA7B,EAAiC;AAE/BH,MAAAA,SAAS,GAAG,IAAIrB,KAAK,CAACyB,kBAAV,CAA8BD,CAAC,GAAC,GAAhC,EAAsCL,WAAtC,EAAmDC,QAAnD,CAAZ;AACAE,MAAAA,SAAS,GAAG,IAAItB,KAAK,CAAC0B,iBAAV,CAA6B;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAA7B,CAAZ;AACAJ,MAAAA,MAAM,GAAG,IAAIvB,KAAK,CAAC4B,IAAV,CAAgBP,SAAhB,EAA2BC,SAA3B,CAAT;AACAnB,MAAAA,KAAK,CAAC0B,GAAN,CAAUN,MAAV;AACD;;AAED,QAAIO,OAAO,GAAG,YAAW,CACvB;AAEA;AACA;AAEA;AACD,KAPD;;AASAA,IAAAA,OAAO;AACR;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAK,MAAA,GAAG,EAAEC,GAAG,IAAK,KAAKnB,KAAL,GAAamB,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAhDyB;;AAmD5B,eAAe/B,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\nimport * as THREE from \"three\";\n\nclass App extends Component {\n  \n  componentDidMount() {\n    \n    var scene = new THREE.Scene();\n\n    var camera = new THREE.PerspectiveCamera(\n      50,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n\n    var renderer = new THREE.WebGLRenderer();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n    \n    this.mount.appendChild(renderer.domElement);\n\n    camera.position.z = 50;\n\n    var innerRadius = 21.9;\n    var outerRadius = 22;\n    var segments = 100;\n    var geometry3, material3, circle;\n\n\n    for (var i = 10; i <= 22; (i+4)) {\n      \n      geometry3 = new THREE.RingBufferGeometry((i-0.1), outerRadius, segments);\n      material3 = new THREE.MeshBasicMaterial( { color: 0x42ff00 } );\n      circle = new THREE.Mesh( geometry3, material3 );\n      scene.add(circle);\n    }\n\n    var animate = function() {\n      //requestAnimationFrame(animate);\n\n      //cube.rotation.x += 0.01;\n      //cube.rotation.y += 0.01;\n\n      //renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n\n  render() {\n    return <div ref={ref => (this.mount = ref)} />;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}